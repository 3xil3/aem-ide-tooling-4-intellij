<idea-plugin version="2">
    <id>com.headwire.aem.tooling.intellij</id>
    <name>Headwire AEM Tooling Plugin</name>
    <version>0.6-BETA-3</version>
    <vendor email="support@headwire.com" url="http://www.headwire.com">Headwire Inc.</vendor>

    <description><![CDATA[
      This ItelliJ IDEA Plugin is to manage a project deployed on Adobe AEM through the IDE.
    ]]></description>

    <change-notes><![CDATA[
      <ul>
        <li>0.6 Beta 2: Fixed an issue with the Console Log Settings to being disabled if no configuration is selected.
                        Fixed issues with Windows paths.
        </li>
        <li>0.6 Beta 2: Checking a Selected Configuration is renamed to Run as it indicates a persistence which is
                        what it actually does. Also renamed the Reset Current Configuration to Purge Plugin Cache Data.
                        Fixed a bad Message Property Name.
        </li>
        <li>0.6 Beta 1: Added the support to create new Projects through Maven Archetypes (AEM or Sling). The Builder
                        is geared towards that and only shows the available Archetypes and let the user set the
                        required properties. The rest remains the same as creating a Project through the Maven Builder
                        and using archetypes there
        </li>
        <li>0.5 Beta 2: A Deploy of an OSGi Bundle module will call Maven to build the artifact first.
                        This can be switched on (default) or off in the Server Connection Configuration.
        </li>
        <li>0.5 Beta 1: First Beta Release. It includes many fixes including the making it work without the Plugin Window
                        to be open, avoiding to compile Java classes with errors, avoiding repetitive messages during
                        check / verify.
        </li>
        <li>Initial Version</li>
      </ul>
    ]]>
    </change-notes>

    <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Build+Number+Ranges for description -->
    <idea-version since-build="131"/>

    <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->
    <!-- This Dependency is necessary to be able to access the IntelliJ Maven Classes from within this plugin -->
    <!-- For development make sure the plugin is added to the IntelliJ SDK and not as a library -->
    <depends>org.jetbrains.idea.maven</depends>

    <extensions defaultExtensionNs="com.intellij">
        <moduleBuilder builderClass="com.headwire.aem.tooling.intellij.explorer.SlingModuleBuilder"/>
        <toolWindow id="AEM" anchor="right" icon="/images/hw.png"
                    factoryClass="com.headwire.aem.tooling.intellij.explorer.ServersToolWindowFactory"/>
        <toolWindow id="AEM Console" anchor="bottom" secondary="true"
                    icon="/images/hw.png"
                    factoryClass="com.headwire.aem.tooling.intellij.console.ConsoleLogToolWindowFactory"/>
    </extensions>

    <application-components>
        <!-- Add your application components here -->
        <!-- AS NOTE: Any Wrapper class (ending in Wrapper) are classes that mimic the OSGi binding of other services -->
        <component>
            <implementation-class>com.headwire.aem.tooling.intellij.config.general.AEMPluginConfiguration</implementation-class>
        </component>
        <component>
            <implementation-class>com.headwire.aem.tooling.intellij.console.ConsoleLog</implementation-class>
        </component>
        <component>
            <interface-class>org.osgi.service.event.EventAdmin</interface-class>
            <implementation-class>com.headwire.aem.tooling.intellij.eclipse.wrapper.EventAdminWrapper</implementation-class>
        </component>
        <component>
            <interface-class>org.apache.sling.ide.transport.RepositoryFactory</interface-class>
            <implementation-class>com.headwire.aem.tooling.intellij.eclipse.wrapper.VltRepositoryFactoryWrapper</implementation-class>
        </component>
        <component>
            <interface-class>org.apache.sling.ide.osgi.OsgiClientFactory</interface-class>
            <implementation-class>com.headwire.aem.tooling.intellij.eclipse.wrapper.OsgiClientFactoryWrapper</implementation-class>
        </component>
        <component>
            <interface-class>org.apache.sling.ide.serialization.SerializationManager</interface-class>
            <implementation-class>com.headwire.aem.tooling.intellij.eclipse.wrapper.SerializationManagerWrapper</implementation-class>
        </component>
        <component>
            <interface-class>org.apache.sling.ide.artifacts.EmbeddedArtifactLocator</interface-class>
            <implementation-class>com.headwire.aem.tooling.intellij.util.ArtifactsLocatorImpl</implementation-class>
        </component>
        <component>
            <interface-class>org.apache.sling.ide.filter.FilterLocator</interface-class>
            <implementation-class>com.headwire.aem.tooling.intellij.eclipse.wrapper.VltFilterLocatorWrapper</implementation-class>
        </component>
        <component>
            <interface-class>org.apache.sling.ide.impl.vlt.VaultFsLocator</interface-class>
            <implementation-class>org.apache.sling.ide.impl.vlt.VaultFsLocatorImpl</implementation-class>
        </component>
        <component>
            <interface-class>org.apache.sling.ide.log.Logger</interface-class>
            <implementation-class>com.headwire.aem.tooling.intellij.eclipse.wrapper.PluginLoggerWrapper</implementation-class>
        </component>
    </application-components>

    <project-components>
        <component>
            <implementation-class>com.headwire.aem.tooling.intellij.communication.MessageManager</implementation-class>
        </component>
        <component>
            <implementation-class>com.headwire.aem.tooling.intellij.explorer.ServerTreeSelectionHandler</implementation-class>
        </component>
        <component>
            <implementation-class>com.headwire.aem.tooling.intellij.explorer.ServerTreeManager</implementation-class>
        </component>
        <component>
            <implementation-class>com.headwire.aem.tooling.intellij.config.ServerConfigurationManager</implementation-class>
        </component>
        <component>
            <implementation-class>com.headwire.aem.tooling.intellij.communication.ServerConnectionManager</implementation-class>
        </component>
        <component>
            <implementation-class>com.headwire.aem.tooling.intellij.console.ConsoleLogProjectTracker</implementation-class>
        </component>
        <component>
            <implementation-class>com.headwire.aem.tooling.intellij.communication.ContentResourceChangeListener</implementation-class>
        </component>
    </project-components>

    <actions>
        <!-- Add your actions here -->
        <action id="AEM.Add.Action"
                class="com.headwire.aem.tooling.intellij.action.AddServerConfigurationAction"
                icon="AllIcons.General.Add"
                />
        <action id="AEM.Edit.Action"
                class="com.headwire.aem.tooling.intellij.action.EditServerConfigurationAction"
                icon="AllIcons.Actions.EditSource"/>
        <action id="AEM.Remove.Action"
                class="com.headwire.aem.tooling.intellij.action.RemoveServerConfigurationAction"
                icon="AllIcons.General.Remove"/>
        <action id="AEM.Verify.Configuration.Action"
                class="com.headwire.aem.tooling.intellij.action.VerifyConfigurationAction"
                icon="AllIcons.Actions.Share"/>
        <action id="AEM.Reset.Configuration.Action"
                class="com.headwire.aem.tooling.intellij.action.ResetConfigurationAction"
                icon="AllIcons.Actions.Lightning"/>
        <action id="AEM.Build.Configuration.Action"
                class="com.headwire.aem.tooling.intellij.action.BuildConfigurationAction"
                icon="AllIcons.Actions.Module"/>
        <action id="AEM.Check.Action"
                class="com.headwire.aem.tooling.intellij.action.StartRunConnectionAction"
                icon="AllIcons.General.Run"/>
        <action id="AEM.Start.Debug.Action"
                class="com.headwire.aem.tooling.intellij.action.StartDebugConnectionAction"
                icon="AllIcons.General.Debug"/>
        <action id="AEM.Stop.Connection.Action"
                class="com.headwire.aem.tooling.intellij.action.StopConnectionAction"
                icon="AllIcons.Process.Stop"/>
        <action id="AEM.Deploy.Action"
                class="com.headwire.aem.tooling.intellij.action.DeployToServerAction"
                icon="AllIcons.Actions.Export"/>
        <action id="AEM.Force.Deploy.Action"
                class="com.headwire.aem.tooling.intellij.action.ForceDeployToServerAction"
                icon="AllIcons.Actions.ForceRefresh"/>
        <action id="AEM.Import.From.Server.Action"
                class="com.headwire.aem.tooling.intellij.action.ImportFromServerAction"
                text="Import from"
                description="Import from current Server Connection"
                icon="AllIcons.ToolbarDecorator.Import"/>

        <group id="AEM.Toolbar">
            <reference id="AEM.Add.Action"/>
            <reference id="AEM.Remove.Action"/>
            <reference id="AEM.Edit.Action"/>
            <reference id="AEM.Verify.Configuration.Action"/>
            <reference id="AEM.Reset.Configuration.Action"/>
            <reference id="AEM.Build.Configuration.Action"/>
            <separator/>
            <reference id="AEM.Check.Action"/>
            <reference id="AEM.Start.Debug.Action"/>
            <reference id="AEM.Stop.Connection.Action"/>
            <separator/>
            <reference id="AEM.Deploy.Action"/>
            <reference id="AEM.Force.Deploy.Action"/>
        </group>
        <group id="AEM.Connection.Popup">
            <reference id="AEM.Add.Action"/>
            <reference id="AEM.Remove.Action"/>
            <reference id="AEM.Edit.Action"/>
            <reference id="AEM.Build.Configuration.Action"/>
            <reference id="AEM.Verify.Configuration.Action"/>
            <reference id="AEM.Reset.Configuration.Action"/>
            <separator/>
            <reference id="AEM.Check.Action"/>
            <reference id="AEM.Start.Debug.Action"/>
            <reference id="AEM.Stop.Connection.Action"/>
            <separator/>
            <reference id="AEM.Deploy.Action"/>
            <reference id="AEM.Force.Deploy.Action"/>
        </group>
        <group id="AEM.Root.Popup">
            <reference id="AEM.Add.Action"/>
        </group>
        <!-- Context Menu Popup -->
        <group id="AEM.Context.Menu.Popup"
               class="com.headwire.aem.tooling.intellij.action.AEMActionGroup"
               text="AEM"
               popup="true"
               icon="/images/hw.png"
        >
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
            <add-to-group group-id="CodeMenu" anchor="last"/>
            <reference ref="AEM.Import.From.Server.Action"/>
        </group>
    </actions>

</idea-plugin>